*-----------------------------------------------------------------------------
	SUBROUTINE BAPA.PROGRAM.DEBUG

    $INSERT I_COMMON
    $INSERT I_EQUATE
*    $INSERT I_BAPA.B.CHAECK.ACCT.COMM.CHG.COMMON
*	$INSERT I_BAPA.B.CHAECK.ACCT.COMM.CHG.COMMON
    $INSERT I_F.DFE.PARAMETER
	$INSERT I_F.AC.CHARGE.REQUEST
	$INSERT I_F.CUSTOMER
	$INSERT I_F.AA.ARRANGEMENT
	$INSERT I_F.BAPA.FT.COM.PARAM
	$INSERT I_F.ACCOUNT
	$INSERT I_F.TAX
	$INSERT I_F.EB.CONTRACT.BALANCES
	$INSERT I_F.TSA.SERVICE
	$INSERT I_F.BAPA.PARAM.NOSTRO.SWIFT
	

*-----------------------------------------------------------------------------
    GOSUB INICIO ;*Intialise
	GOSUB P.SELECT 
    RETURN
*-----------------------------------------------------------------------------
*** <region name= INICIO>
*-----------------------------------------------------------------------------
INICIO:
*-----------------------------------------------------------------------------
	
*	FN.TSA.SERVICE = "F.TSA.SERVICE"
*    F.TSA.SERVICE = ""
*    CALL OPF(FN.TSA.SERVICE, F.TSA.SERVICE)
	
	FN.ACCOUNT	= 	"F.ACCOUNT"
	F.ACCOUNT	=	""
	CALL OPF(FN.ACCOUNT,F.ACCOUNT)
	
	FN.TAX	= 	"F.TAX"
	F.TAX	=	""
	CALL OPF(FN.TAX,F.TAX)
	
	
	FN.CUSTOMER	= 	"F.CUSTOMER"
	F.CUSTOMER	=	""
	CALL OPF(FN.CUSTOMER,F.CUSTOMER)
	
	FN.AA.ARRANGEMENT	= 	"F.AA.ARRANGEMENT"
	F.AA.ARRANGEMENT	=	""
	CALL OPF(FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)
		FN.TSA.SERVICE = 'F.TSA.SERVICE'
    F.TSA.SERVICE  = ''
    CALL OPF(FN.TSA.SERVICE, F.TSA.SERVICE)
		FN.BAPA.PARAM.NOSTRO.SWIFT	=	"F.EB.BAPA.PARAM.NOSTRO.SWIFT"
	F.BAPA.PARAM.NOSTRO.SWIFT	=	""
	CALL OPF(FN.BAPA.PARAM.NOSTRO.SWIFT,F.BAPA.PARAM.NOSTRO.SWIFT)
	 


	Y.SEND.BIC = "AAACKWKWXXX" ;*R.NEW(FT.INW.SEND.BIC)
	CALL F.READ(FN.BAPA.PARAM.NOSTRO.SWIFT,"SYSTEM",R.BAPA.PARAM.NOSTRO.SWIFT,F.BAPA.PARAM.NOSTRO.SWIFT,ERR.BAPA.PARAM.NOSTRO.SWIFT)
	Y.BIC.CODE	=	R.BAPA.PARAM.NOSTRO.SWIFT<EB.BAP16.BIC.CODE>
	CHANGE VM TO FM IN Y.BIC.CODE
	LOCATE Y.SEND.BIC IN Y.BIC.CODE SETTING POS THEN 
DEBUG
		Y.NOST.ACCT = R.BAPA.PARAM.NOSTRO.SWIFT<EB.BAP16.NOST.ACCT><1,POS>
		R.NEW(FT.DEBIT.ACCT.NO) = Y.NOST.ACCT
	END 
	

	Y.ID.TSA= "BNK/BAPA.ACHRG.MASS"
	CALL CACHE.READ(FN.TSA.SERVICE,Y.ID.TSA,R.TSA,F.TSA.SERVICE,Y.ERR.TSA)
	Y.FRECUENCY.TSA = R.TSA<TS.TSM.FREQUENCY>
	CHANGE " " TO "/" IN Y.FRECUENCY.TSA
	
	Y.MONT = FIELD (Y.FRECUENCY.TSA,"/",2 )
	Y.DAY = FIELD (Y.FRECUENCY.TSA,"/",1 )
	
	Y.YEAR = FIELD (Y.FRECUENCY.TSA,"/",3 )
	Y.HOUR =FIELD (Y.FRECUENCY.TSA,"/",4 )
	Y.FREQ = FIELD (Y.FRECUENCY.TSA,"/",5 )
	
	IF Y.MONT LE 11 THEN
		Y.MONT = Y.MONT+1
	END 
	ELSE
		Y.MONT = 1
		Y.YEAR = Y.YEAR+1
	END 
	
	
	Y.NEW.DATE = Y.DAY:"/":Y.MONT:"/":Y.YEAR:" ":Y.HOUR:" ":Y.FREQ
	R.TSA<TS.TSM.FREQUENCY>	= Y.NEW.DATE
	CALL F.WRITE(FN.TSA.SERVICE,Y.ID.TSA,R.TSA)
	


	DFE.PARAMETER.ID = "BAPA.ACHRG.MASS"

    CALL CACHE.READ('F.DFE.PARAMETER',DFE.PARAMETER.ID,R.DFE.PARAMETER,YERR)

	OUPUT.DIR = R.DFE.PARAMETER<DFE.PARAM.INPUT.DIR>
	Y.VERSION.DFE	=	R.DFE.PARAMETER<DFE.PARAM.OFS.VERSION>
	FN.INTERFACE.FILE.PATH = UPD.ARCH
	
	OPEN OUPUT.DIR TO F.FILE.POINTER ELSE
        E.ERROR = 1
        Y.ERRROR.MSG = 'OPEN ERROR, FILE: ' : Y.OUTPATH
    END
	Y.TEMP.FILE.NAME = "COMISIONES.DEBIDA.DILIGENCIA.txt"
	DELETE F.FILE.POINTER,Y.TEMP.FILE.NAME
	
	
	CALL CACHE.READ('F.TSA.SERVICE',DFE.PARAMETER.ID,R.DFE.PARAMETER,YERR)
	
	



		ACCOUNT.ID = "AA19213R6TL5"
		BAL.TYPE = 'WORKING'
		AVAIL.WORK.BAL = ''
        LOCKED.BALANCE = ''
        TOTAL.BAL = ""
        RESERVED.IN = ''
        RESERVED.OUT = ''
		
        CALL AC.GET.BAL.WITH.LOCKED(ACCOUNT.ID,BAL.TYPE,TODAY,RESERVED.IN,AVAIL.WORK.BAL,LOCKED.BALANCE,TOTAL.BAL,RESERVED.OUT,'')
        BALANCE.AMOUNT = AVAIL.WORK.BAL
DEBUG		
		ACCOUNT.ID = "AA19213R6TL5"
    CALL AA.GET.ECB.BALANCE.AMOUNT(ACCOUNT.ID,'CURACCOUNT',TODAY,BALANCE.AMOUNT,ERROR.MESSAGE)
		
		
		
		

	Y.AMOUNT.LOCKED = "10"
	Y.AMOUNT.LOCKED <-1> = "20.5"
	Y.AMOUNT.LOCKED <-1> = "50"
	Y.WORKING.BALANCE = "100"
	Y.NUM.LOCKED =  DCOUNT(Y.AMOUNT.LOCKED,FM)
	IF Y.NUM.LOCKED GT 1 THEN
	LOOP
	REMOVE	Y.AMT.LOCKED FROM Y.AMOUNT.LOCKED SETTING POS.LOCKED
		WHILE Y.AMT.LOCKED:POS.LOCKED
			Y.TOTAL.AMT.LOCKED = Y.TOTAL.AMT.LOCKED + Y.AMT.LOCKED
			
	REPEAT
DEBUG
	Y.AMT.AVAILABLE	= Y.WORKING.BALANCE - Y.TOTAL.AMT.LOCKED
	END 
	ELSE
		Y.AMT.AVAILABLE	= Y.WORKING.BALANCE - Y.AMOUNT.LOCKED<Y.NUM.LOCKED>
	END 




	
	FN.BAPA.FT.COM.PARAM = 	"F.EB.BAPA.FT.COM.PARAM"
	F.BAPA.FT.COM.PARAM	=	""
	CALL OPF(FN.BAPA.FT.COM.PARAM,F.BAPA.FT.COM.PARAM)
	Y.ID.PARAMETER	=	"NATURAL.PERSON"
	CALL F.READ (FN.BAPA.FT.COM.PARAM,Y.ID.PARAMETER,R.BAPA.FT.COM.PARAM,F.BAPA.FT.COM.PARAM,ERR)
*CALL F.READ (FN.TABLE.PARAM,Y.ID.PARAMETER,R.BAPA.FT.COM.PARAM,F.TABLE.PARAM,BAPA.FT.COM.PARAM.ERR)
	
	LREF.APP = 'CUSTOMER':FM:'ACCOUNT'
    LREF.FIELDS = 'LT.PERSON.TYPE':FM:'LT.ST.ACCT'
	LOCAL.REF.POS = ''
    CALL MULTI.GET.LOC.REF (LREF.APP, LREF.FIELDS, LOCAL.REF.POS)
  
    Y.LT.PERSON.TYPE	=	LOCAL.REF.POS<1,1>
	Y.LT.ST.ACCT		=	LOCAL.REF.POS<2,1>

    DFE.PARAMETER.ID = "BAPA.ACHRG.MASS"

    CALL CACHE.READ('F.DFE.PARAMETER',DFE.PARAMETER.ID,R.DFE.PARAMETER,YERR)

	UPD.ARCH = R.DFE.PARAMETER<DFE.PARAM.INPUT.DIR>
	Y.VERSION.DFE	=	R.DFE.PARAMETER<DFE.PARAM.OFS.VERSION>
	FN.INTERFACE.FILE.PATH = UPD.ARCH
 

    OPEN FN.INTERFACE.FILE.PATH TO Y.POINTER ELSE
        ABORT 201, Y.SEP.PATH
    END
    
    RETURN
*-----------------------------------------------------------------------------
P.SELECT:
*-----------------------------------------------------------------------------

	SEL.CMD = 'SELECT ':FN.TAX
    SEL.LIST = ''

	CALL EB.READLIST(SEL.CMD, SEL.LIST, '', RECORDS.SELECTED, RET.CODE)	
	LOOP
		REMOVE	Y.ID.TAX FROM SEL.LIST SETTING POS.TAX
			WHILE Y.ID.TAX:POS.TAX
				CALL F.READ(FN.TAX,Y.ID.TAX,R.TAX,F.TAX,EEE)	
				IF Y.TAX THEN
					Y.TAX<-1> = FIELD(Y.ID.TAX,".",1)
					Y.RATE<-1>= R.TAX<EB.TAX.RATE>
				END 
				ELSE 
					Y.TAX = FIELD(Y.ID.TAX,".",1)
					Y.RATE = R.TAX<EB.TAX.RATE>
				END 

	REPEAT
DEBUG
	Y.TAX.CODE = 1
	Y.AMT.CHARGE = 10
	LOCATE Y.TAX.CODE IN Y.TAX SETTING POS.TAX THEN
		Y.CALC.POR.CHARGE = (Y.AMT.CHARGE *Y.RATE<POS.TAX>)/100
	END 

	
	
	
	
	
	
	
	Y.FILE.NAME = "ARCHIVO.PRUEBA.txt"
	READ R.REC FROM Y.POINTER,Y.FILE.NAME ELSE
        CALL OCOMO('No se pudo abrir el archivo: ': SQUOTE(FILE.POINTER :'/':Y.FILE.NAME)) 
		RETURN
    END	
	
	Y.ARRAY = ""
	LOOP
        REMOVE Y.LINE.RECORD FROM R.REC SETTING Y.POS
    WHILE Y.LINE.RECORD:Y.POS
		IF Y.TOTAL.RECORDS THEN
			Y.TOTAL.RECORDS<-1>= Y.LINE.RECORD
		END 
		ELSE
			Y.TOTAL.RECORDS= Y.LINE.RECORD
		END
	REPEAT
	
	
		Y.ACCOUNT = "1000000449"
	CALL  F.READ(FN.ACCOUNT, Y.ACCOUNT, R.ACCOUNT, F.ACCOUNT, ACCOUNT.ERR)
	Y.WORKING.BALANCE 	=	R.ACCOUNT<AC.WORKING.BALANCE>
		Y.LOCK.BAL = 0
    LOCKED.AMOUNT = R.ACCOUNT<AC.LOCKED.AMOUNT>
    LOCKED.DATE = ''
    LOCKED.DATE = R.ACCOUNT<AC.FROM.DATE>
    DATE.CNT = DCOUNT(LOCKED.DATE,VM)
	CHANGE VM TO FM IN LOCKED.DATE
	CHANGE VM TO FM IN LOCKED.AMOUNT
    Y.STR = 1
    LOOP
    WHILE Y.STR LE DATE.CNT
        CUR.DATE = LOCKED.DATE<Y.STR>
        IF CUR.DATE LE TODAY THEN
            ;*Y.LOCK.BAL+=LOCKED.AMOUNT<Y.STR>
			IF Y.AMT EQ "" THEN 
				Y.AMT = LOCKED.AMOUNT<Y.STR>
			END
			ELSE 
				Y.AMT<-1> = LOCKED.AMOUNT<Y.STR>
			END 
        END
        Y.STR++
    REPEAT
	Y.COUNT.AMT =  DCOUNT(Y.AMT,FM)
	Y.LOCK.BAL = Y.AMT<Y.COUNT.AMT>
DEBUG
	Y.AMT.AVAILABLE	= Y.WORKING.BALANCE - Y.LOCK.BAL
	
	
	
	
RETURN
*-----------------------------------------------------------------------------
*** </region>
    END
*-----------------------------------------------------------------------------
	SUBROUTINE BAPA.PROGRAM.DEBUG

    $INSERT I_COMMON
    $INSERT I_EQUATE
*    $INSERT I_BAPA.B.CHAECK.ACCT.COMM.CHG.COMMON
*	$INSERT I_BAPA.B.CHAECK.ACCT.COMM.CHG.COMMON
    $INSERT I_F.DFE.PARAMETER
	$INSERT I_F.AC.CHARGE.REQUEST
	$INSERT I_F.CUSTOMER
	$INSERT I_F.AA.ARRANGEMENT
	$INSERT I_F.BAPA.FT.COM.PARAM
	$INSERT I_F.ACCOUNT
	$INSERT I_F.TAX
	$INSERT I_F.EB.CONTRACT.BALANCES
	$INSERT I_F.TSA.SERVICE
	

*-----------------------------------------------------------------------------
    GOSUB INICIO ;*Intialise
	GOSUB P.SELECT 
    RETURN
*-----------------------------------------------------------------------------
*** <region name= INICIO>
*-----------------------------------------------------------------------------
INICIO:
*-----------------------------------------------------------------------------
	
*	FN.TSA.SERVICE = "F.TSA.SERVICE"
*    F.TSA.SERVICE = ""
*    CALL OPF(FN.TSA.SERVICE, F.TSA.SERVICE)
	
	FN.ACCOUNT	= 	"F.ACCOUNT"
	F.ACCOUNT	=	""
	CALL OPF(FN.ACCOUNT,F.ACCOUNT)
	
	FN.TAX	= 	"F.TAX"
	F.TAX	=	""
	CALL OPF(FN.TAX,F.TAX)
	
	
	FN.CUSTOMER	= 	"F.CUSTOMER"
	F.CUSTOMER	=	""
	CALL OPF(FN.CUSTOMER,F.CUSTOMER)
	
	FN.AA.ARRANGEMENT	= 	"F.AA.ARRANGEMENT"
	F.AA.ARRANGEMENT	=	""
	CALL OPF(FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)
		FN.TSA.SERVICE = 'F.TSA.SERVICE'
    F.TSA.SERVICE  = ''
    CALL OPF(FN.TSA.SERVICE, F.TSA.SERVICE)

DEBUG	 


	Y.ID.TSA= "BNK/BAPA.ACHRG.MASS"
	CALL CACHE.READ(FN.TSA.SERVICE,Y.ID.TSA,R.TSA,F.TSA.SERVICE,Y.ERR.TSA)
	Y.FRECUENCY.TSA = R.TSA<TS.TSM.FREQUENCY>
	CHANGE " " TO "/" IN Y.FRECUENCY.TSA
	
	Y.MONT = FIELD (Y.FRECUENCY.TSA,"/",2 )
	Y.DAY = FIELD (Y.FRECUENCY.TSA,"/",1 )
	
	Y.YEAR = FIELD (Y.FRECUENCY.TSA,"/",3 )
	Y.HOUR =FIELD (Y.FRECUENCY.TSA,"/",4 )
	Y.FREQ = FIELD (Y.FRECUENCY.TSA,"/",5 )
	
	IF Y.MONT LE 11 THEN
		Y.MONT = Y.MONT+1
	END 
	ELSE
		Y.MONT = 1
		Y.YEAR = Y.YEAR+1
	END 
	
	
	Y.NEW.DATE = Y.DAY:"/":Y.MONT:"/":Y.YEAR:" ":Y.HOUR:" ":Y.FREQ
	R.TSA<TS.TSM.FREQUENCY>	= Y.NEW.DATE
	CALL F.WRITE(FN.TSA.SERVICE,Y.ID.TSA,R.TSA)
	


	DFE.PARAMETER.ID = "BAPA.ACHRG.MASS"

    CALL CACHE.READ('F.DFE.PARAMETER',DFE.PARAMETER.ID,R.DFE.PARAMETER,YERR)

	OUPUT.DIR = R.DFE.PARAMETER<DFE.PARAM.INPUT.DIR>
	Y.VERSION.DFE	=	R.DFE.PARAMETER<DFE.PARAM.OFS.VERSION>
	FN.INTERFACE.FILE.PATH = UPD.ARCH
	
	OPEN OUPUT.DIR TO F.FILE.POINTER ELSE
        E.ERROR = 1
        Y.ERRROR.MSG = 'OPEN ERROR, FILE: ' : Y.OUTPATH
    END
	Y.TEMP.FILE.NAME = "COMISIONES.DEBIDA.DILIGENCIA.txt"
	DELETE F.FILE.POINTER,Y.TEMP.FILE.NAME
	
	
	CALL CACHE.READ('F.TSA.SERVICE',DFE.PARAMETER.ID,R.DFE.PARAMETER,YERR)
	
	



		ACCOUNT.ID = "AA19213R6TL5"
		BAL.TYPE = 'WORKING'
		AVAIL.WORK.BAL = ''
        LOCKED.BALANCE = ''
        TOTAL.BAL = ""
        RESERVED.IN = ''
        RESERVED.OUT = ''
		
        CALL AC.GET.BAL.WITH.LOCKED(ACCOUNT.ID,BAL.TYPE,TODAY,RESERVED.IN,AVAIL.WORK.BAL,LOCKED.BALANCE,TOTAL.BAL,RESERVED.OUT,'')
        BALANCE.AMOUNT = AVAIL.WORK.BAL
DEBUG		
		ACCOUNT.ID = "AA19213R6TL5"
    CALL AA.GET.ECB.BALANCE.AMOUNT(ACCOUNT.ID,'CURACCOUNT',TODAY,BALANCE.AMOUNT,ERROR.MESSAGE)
		
		
		
		

	Y.AMOUNT.LOCKED = "10"
	Y.AMOUNT.LOCKED <-1> = "20.5"
	Y.AMOUNT.LOCKED <-1> = "50"
	Y.WORKING.BALANCE = "100"
	Y.NUM.LOCKED =  DCOUNT(Y.AMOUNT.LOCKED,FM)
	IF Y.NUM.LOCKED GT 1 THEN
	LOOP
	REMOVE	Y.AMT.LOCKED FROM Y.AMOUNT.LOCKED SETTING POS.LOCKED
		WHILE Y.AMT.LOCKED:POS.LOCKED
			Y.TOTAL.AMT.LOCKED = Y.TOTAL.AMT.LOCKED + Y.AMT.LOCKED
			
	REPEAT
DEBUG
	Y.AMT.AVAILABLE	= Y.WORKING.BALANCE - Y.TOTAL.AMT.LOCKED
	END 
	ELSE
		Y.AMT.AVAILABLE	= Y.WORKING.BALANCE - Y.AMOUNT.LOCKED<Y.NUM.LOCKED>
	END 




	
	FN.BAPA.FT.COM.PARAM = 	"F.EB.BAPA.FT.COM.PARAM"
	F.BAPA.FT.COM.PARAM	=	""
	CALL OPF(FN.BAPA.FT.COM.PARAM,F.BAPA.FT.COM.PARAM)
	Y.ID.PARAMETER	=	"NATURAL.PERSON"
	CALL F.READ (FN.BAPA.FT.COM.PARAM,Y.ID.PARAMETER,R.BAPA.FT.COM.PARAM,F.BAPA.FT.COM.PARAM,ERR)
*CALL F.READ (FN.TABLE.PARAM,Y.ID.PARAMETER,R.BAPA.FT.COM.PARAM,F.TABLE.PARAM,BAPA.FT.COM.PARAM.ERR)
	
	LREF.APP = 'CUSTOMER':FM:'ACCOUNT'
    LREF.FIELDS = 'LT.PERSON.TYPE':FM:'LT.ST.ACCT'
	LOCAL.REF.POS = ''
    CALL MULTI.GET.LOC.REF (LREF.APP, LREF.FIELDS, LOCAL.REF.POS)
  
    Y.LT.PERSON.TYPE	=	LOCAL.REF.POS<1,1>
	Y.LT.ST.ACCT		=	LOCAL.REF.POS<2,1>

    DFE.PARAMETER.ID = "BAPA.ACHRG.MASS"

    CALL CACHE.READ('F.DFE.PARAMETER',DFE.PARAMETER.ID,R.DFE.PARAMETER,YERR)

	UPD.ARCH = R.DFE.PARAMETER<DFE.PARAM.INPUT.DIR>
	Y.VERSION.DFE	=	R.DFE.PARAMETER<DFE.PARAM.OFS.VERSION>
	FN.INTERFACE.FILE.PATH = UPD.ARCH
 

    OPEN FN.INTERFACE.FILE.PATH TO Y.POINTER ELSE
        ABORT 201, Y.SEP.PATH
    END
    
    RETURN
*-----------------------------------------------------------------------------
P.SELECT:
*-----------------------------------------------------------------------------

	SEL.CMD = 'SELECT ':FN.TAX
    SEL.LIST = ''

	CALL EB.READLIST(SEL.CMD, SEL.LIST, '', RECORDS.SELECTED, RET.CODE)	
	LOOP
		REMOVE	Y.ID.TAX FROM SEL.LIST SETTING POS.TAX
			WHILE Y.ID.TAX:POS.TAX
				CALL F.READ(FN.TAX,Y.ID.TAX,R.TAX,F.TAX,EEE)	
				IF Y.TAX THEN
					Y.TAX<-1> = FIELD(Y.ID.TAX,".",1)
					Y.RATE<-1>= R.TAX<EB.TAX.RATE>
				END 
				ELSE 
					Y.TAX = FIELD(Y.ID.TAX,".",1)
					Y.RATE = R.TAX<EB.TAX.RATE>
				END 

	REPEAT
DEBUG
	Y.TAX.CODE = 1
	Y.AMT.CHARGE = 10
	LOCATE Y.TAX.CODE IN Y.TAX SETTING POS.TAX THEN
		Y.CALC.POR.CHARGE = (Y.AMT.CHARGE *Y.RATE<POS.TAX>)/100
	END 

	
	
	
	
	
	
	
	Y.FILE.NAME = "ARCHIVO.PRUEBA.txt"
	READ R.REC FROM Y.POINTER,Y.FILE.NAME ELSE
        CALL OCOMO('No se pudo abrir el archivo: ': SQUOTE(FILE.POINTER :'/':Y.FILE.NAME)) 
		RETURN
    END	
	
	Y.ARRAY = ""
	LOOP
        REMOVE Y.LINE.RECORD FROM R.REC SETTING Y.POS
    WHILE Y.LINE.RECORD:Y.POS
		IF Y.TOTAL.RECORDS THEN
			Y.TOTAL.RECORDS<-1>= Y.LINE.RECORD
		END 
		ELSE
			Y.TOTAL.RECORDS= Y.LINE.RECORD
		END
	REPEAT
	
	
		Y.ACCOUNT = "1000000449"
	CALL  F.READ(FN.ACCOUNT, Y.ACCOUNT, R.ACCOUNT, F.ACCOUNT, ACCOUNT.ERR)
	Y.WORKING.BALANCE 	=	R.ACCOUNT<AC.WORKING.BALANCE>
		Y.LOCK.BAL = 0
    LOCKED.AMOUNT = R.ACCOUNT<AC.LOCKED.AMOUNT>
    LOCKED.DATE = ''
    LOCKED.DATE = R.ACCOUNT<AC.FROM.DATE>
    DATE.CNT = DCOUNT(LOCKED.DATE,VM)
	CHANGE VM TO FM IN LOCKED.DATE
	CHANGE VM TO FM IN LOCKED.AMOUNT
    Y.STR = 1
    LOOP
    WHILE Y.STR LE DATE.CNT
        CUR.DATE = LOCKED.DATE<Y.STR>
        IF CUR.DATE LE TODAY THEN
            ;*Y.LOCK.BAL+=LOCKED.AMOUNT<Y.STR>
			IF Y.AMT EQ "" THEN 
				Y.AMT = LOCKED.AMOUNT<Y.STR>
			END
			ELSE 
				Y.AMT<-1> = LOCKED.AMOUNT<Y.STR>
			END 
        END
        Y.STR++
    REPEAT
	Y.COUNT.AMT =  DCOUNT(Y.AMT,FM)
	Y.LOCK.BAL = Y.AMT<Y.COUNT.AMT>
DEBUG
	Y.AMT.AVAILABLE	= Y.WORKING.BALANCE - Y.LOCK.BAL
	
	
	
	
RETURN
*-----------------------------------------------------------------------------
*** </region>
    END
